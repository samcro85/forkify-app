node_modules
# Dentro questo file mettiamo tutti i file e le cartelle che non vogliamo inserire nella nostra repository. In questo caso inseriremo la cartella 'dist' in quanto su GIT inseriamo il codice sorgente.
dist
.parcel-cache

# Se usiamo MAC dobbiamo inserire un file che il sistema operativo crea automaticamente nelle directory
.DS_Store

# Poi sul terminale laciamo il comando 'git status' e ci da la lista dei file e cartelle non tracciate, e che quindi vogliamo mettere in repository nella 'Staging Area'
# Per aggiungere tutti i file che ci servono lanciamo il comando 'git add -A'

# Nei file aggiunti se facciamo delle modifiche accanto al file comapre la lettera 'M' che sta per modified, e nella riga dove è avvenuta la modifica compare un rettangolo verde.
# Se lanciamo nuovamente 'git status' ci da la lista dei file tracciati e committed e la lista dei file modificati. Per tracciare i file modificati lanciamo 'git add -A'
# Per avviare il commit digitiamo "git commit -m 'stringa di messaggio'"
# Se vogliamo tornare alla versione precedente digitiamo 'git reset --hard HEAD'
# Se vogliamo guardare i log di tutti i commit digitiamo 'git log'.
# Se vogliamo ripristinare ad una versione precedente copiamo l'id del commit che leggiamo nel log e poi digitiamo 'git reset --hard id'
# Se vogliamo visualizzare le branch del progetto inseriamo 'git branch' e l'asterisco accanto alla parola master sta ad indicare che è la branch sulla quale ci troviamo attualmente
# Creare una branch significa creare una copia dell'attuale master branch nella quale possiamo lavora e apportare modifiche senza intaccare l'attuale master branch sulla quale abbiamo fatto il commit ed è funzionante. Per creare una branch digitiamo 'git branch nome_branch'. Per poter far lo switch di lavoro sulla nuova branch digitiamo 'git checkout nome-branch'

# Se tutto funziona e vogliamo importare le modifiche alla branch main, passiamo alla main tramite 'git checkout main' e poi digitiamo 'git merge nome-branch'.
# Per importare il nostro progetto nella repository di GitHub incolliamo su terminale la linea di comando 'git remote add origin https://github.com/samcro85/forkify-app.git'. Questo comando aggiunge una branch remota chiamata 'origin' con l'URL. Con questo comando facciamo sapere alla nostra branch locale che esiste una branch remota di nome 'origin' a quell'URL.
# Per aggiungere il codice alla branch remota digitiamo 'git push nome_branch_remota branch_codice'
#  
